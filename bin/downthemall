#!/usr/bin/env bash

JOBS=3
JOBLOG=/tmp/$(basename $0)
YOUTUBEDL="youtube-dl --no-playlist --no-warnings -c --"
CURL="curl --progress-bar -g -L -O -C - --"
LIST=0

usage () {
cat <<HELP
Download a list of URLs simultaneously

Usage: $(basename "$0") [-yc] [-j NUM] [-f FILE]
	-c : use curl to download
		 (default is youtube-dl)

	-j : number of simultaneous downloads

	-f : file containing list of URLs to download

Note:
	$(basename "$0") has built-in sane defaults, only
	advanced users should set the above flags


https://github.com/keithieopia/bin/

Copyright (c) 2018-2019 Timothy Keith
Licensed under the MIT license.
HELP
}


while getopts "hyc:j:f:" opt; do
	case $opt in
		h)
		usage
		exit
		;;

		c)
		hash curl 2>/dev/null || { echo >&2 "This option requires the program \"curl\" to be installed"; exit 1; }
		PROG=$CURL
		;;

		y)
		hash youtube-dl 2>/dev/null || { echo >&2 "This option requires the program \"youtube-dl\" to be installed"; exit 1; }
		PROG=$YOUTUBEDL
		;;

		j)
		JOBS=$OPTARG
		;;

		f)
		if [ -f "$OPTARG" ]; then
			LIST=$OPTARG
		else
			echo "ERROR: could not find file: $OPTARG"
			exit 1
		fi
		;;

		\?)
		echo "Invalid option: -$OPTARG" >&2
		exit 1
		;;

		:)
		echo "Option -$OPTARG requires an argument." >&2
		exit 1
		;;
	esac
done
shift $((OPTIND -1))

if [[ "$LIST" == "0" ]]; then
	if [ -f "./download.txt" ]; then
		LIST="download.txt"
	else
		echo "ERROR: No input provided."
		echo "	Set the -f flag or create a download.txt in the current directory"
		echo "	with the URLs you wish to download!"
		exit 1
	fi
fi

# Remove blank lines
cat $LIST | tr -s '\n' '\n' > list.tmp
mv list.tmp $LIST

if [ -z "$PROG" ]; then
	PROG=$YOUTUBEDL
	EXT=$(head -1 $LIST | awk -F . '{print $NF}')

	if [ $(echo $EXT | wc -c) -lt 5 ]; then
		if echo $EXT | grep -qiE '3gp|avi|flv|gif|jpg|jpeg|m4v|mkv|mp4|mpg|mpeg|png|webm|wmv|zip'; then
			PROG=$CURL
		fi
	fi
fi

parallel --will-cite -j $JOBS --joblog $JOBLOG --bar -a $LIST $PROG "{}"
