#!/usr/bin/env bash

usage () {
cat <<HELP
Securely erase files, directories, and slack space

usage: $(basename "$0") OPTION or FILE
   backup   : Clean temporary and backup files
   bash     : Erase BASH history
   browsers : Runs 'firefox' and 'chromium' options
   crap     : Runs 'backup', 'bash', 'browsers', 'flash', 'thumbs', 'trash'
   dir      : Erases all the files in the current directory
   firefox  : Cleans Firefox cache
   flash    : Cleans Adobe Flash cache
   slack    : Clean file system slack space
   thumbs   : Cleans thumbnails generated by the file manager
   trash    : Clean out trash bin
   *        : Tries to erase a given file


https://github.com/keithieopia/bin/

Copyright (c) 2016 Timothy Keith
Licensed under the MIT license.
HELP
}

success() {
    echo -e "$(tput setaf 2)$@$(tput sgr0)"
}

warn() {
    echo -e "$(tput setaf 3)$@$(tput sgr0)"
}

error() {
    echo -e "$(tput setaf 1)$@$(tput sgr0)"
    exit 1
}

title() {
    echo -e "$(tput setaf 7)$@$(tput sgr0)"
}

have() { type "$1" &> /dev/null; }
have dcfldd && DISKDESTROYER='dcfldd' || DISKDESTROYER='dd'
have shred && SHREDDER='shred -fuzv -n 1' || {
    error "$0 requires 'shred' to be installed!"
}

if [ -z ${HISTFILE} ]; then
    HISTFILE="$HOME/.bash_history"
fi


case "${1,,}"
in
    'backup')
        title 'Cleaning Backup Files...'
        find . -type f -name '*.bak' -exec $SHREDDER "{}" \;
        find . -type f -name '*~' -exec $SHREDDER "{}" \;
        find . -type f -name '.*~' -exec $SHREDDER "{}" \;
        ;;

    'bash')
        title 'Shredding bash history...'
        $SHREDDER "${HISTFILE}"
        history -c
        ;;

    'browser'|'browsers')
        $0 'chromium'
        $0 'firefox'
        ;;

    'chromium')
        title 'Removing Chromium cache...'
        find "$HOME/.cache/chromium" -type f -name '*' -exec $SHREDDER "{}" \;
        ;;

    'crap')
        if [ -d "$HOME/.cache/chromium" ]; then
            $0 'chromium'
        fi

        if [ -d "$HOME/.cache/mozilla/firefox" ]; then
            $0 'firefox'
        fi

        if [ -d "$HOME/.adobe" ] || [ -d "$HOME/.macromedia" ]; then
            $0 'flash'
        fi

        if [ -f "$HOME/.local/share/recently-used.xbel" ]; then
            title "Cleaning GNOME's recently used list..."
            $SHREDDER "$HOME/.local/share/recently-used.xbel"
        fi

        $0 'thumbs'
        $0 'trash'
        $0 'history'

        success 'Crap successfully removed!'
        ;;

    'dir')
        # Some safety from user stupidity, I've been burned by bash completion
        # too many times
        DIR=$(pwd)

        if [ "$DIR" = "$HOME" ] || [ "$DIR" = "/" ]; then
            error "Cowardly refusing to shred \$HOME or root"
        fi

        title 'Shredding entire directory...'
        find . -type f -exec $SHREDDER "{}" \;
        ;;

    'firefox')
        title 'Removing Firefox cache...'
        find "$HOME/.cache/mozilla/firefox" -type f -name "*" -exec $SHREDDER "{}" \;
        ;;

    'flash')
        title 'Removing Flash Player cache...'

        if [ -d "$HOME/.adobe" ]; then
            find "$HOME/.adobe" -type f -name "*" -exec $SHREDDER "{}" \;
        fi

        if [ -d "$HOME/.macromedia" ]; then
            find "$HOME/.macromedia" -type f -name "*" -exec $SHREDDER "{}" \;
        fi
        ;;

    'slack')
        if [ "$(id -u)" != "0" ]; then
            if [ -z "$SUDO_COMMAND" ]; then
                warn 'This script must be run as root, recalling self with sudo...'
                sudo $0 $*
                exit 0
            else
                error 'This script must be run as root'
            fi
        fi

        title 'Shredding slack space...'

		HOME_FREE=$(/bin/df -B1 | grep "/home$" | head -1 | awk '{print $4}')
		pv -per -s $HOME_FREE -N "/home" < /dev/zero > /home/.fill.bin
		
		sync
		rm /home/.fill.bin
		sync

		ROOT_FREE=$(/bin/df -B1 | grep "/$" | head -1 | awk '{print $4}')
		pv -per -s $ROOT_FREE -N "/" < /dev/zero > /.fill.bin
		
		sync
		rm /.fill.bin
		sync

        success 'Slack space successfully shredded!'
        ;;

    'thumbs')
        title 'Cleaning Thumbnails...'
        find "$HOME/.thumbnails" -type f -name '*' -exec $SHREDDER "{}" \;
        ;;

    'trash')
        title 'Cleaning Trash...'
        find "$HOME/.local/share/Trash" -type f -name "*" -exec $SHREDDER "{}" \;
        ;;

    '-h')
        usage
        exit
        ;;

    *)
        if [ -f $1 ]; then
            title 'Shredding file...'
            $SHREDDER $1
        else
            error 'No such command or file!'
        fi
        ;;
esac
