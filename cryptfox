#!/bin/bash

# Create and launch an encrypted browser profiles
# Works with Firefox and derivatives (IceCat, Pale Moon, etc)
#
# https://github.com/keithieopia/bin/
#
# Copyright (c) 2016 Timothy Keith
# Licensed under the MIT license.

WHOAMI=${SUDO_USER:-$(whoami)}
CONTAINER_DIR="/home/$WHOAMI/.private" # directory to store encrypted container in
CONTAINER_FILE="cryptfox" # name of encrypted container, doesn't really matter
CONTAINER_SIZE="100M"  # this is a sane default, even with a ton of extensions
BROWSER_EXE="firejail --whitelist=~/projects/startpage firefox" # browser executable, e.g.: firefox
BROWSER_PROFILE="/home/$WHOAMI/.mozilla/firefox" # typically ~/.mozilla/firefox
CACHE_DIR="/home/$WHOAMI/.cache/mozilla/firefox" # typically ~/.cache/mozilla/firefox 


have() { type "$1" &> /dev/null; }
if ! have cryptsetup; then
    echo "$0 requires 'cryptsetup' to be installed!"
    exit 1
fi
if ! have zenity; then
    echo "$0 requires 'zenity' to be installed!"
    exit 1
fi
if ! have sudo; then
    echo "$0 requires 'sudo' to be installed!"
    exit 1
fi

if [ "$EUID" -ne 0 ]; then
    while [ -z "$SUDO" ]; do
        PASSWORD="$(zenity --entry --entry-hide-text --title 'sudo' --window-icon 'question' --text 'Enter sudo password:')"

        if [ ! $PASSWORD ]; then
            zenity --error --text="Canceling $(basename $0)"
            exit 1
        elif [ -z $PASSWORD ]; then
            zenity --error --text="No sudo password provided!"
        else
            SUDO=$PASSWORD
        fi
    done

    echo "$SUDO" | sudo -S $0
    exit
fi

function lockFirefox() {
    umount "$BROWSER_PROFILE/$CONTAINER_FILE"
    rmdir "$BROWSER_PROFILE/$CONTAINER_FILE"

    DELETE_DIRS=("$CACHE_DIR/$CONTAINER_FILE"
                 "/home/$WHOAMI/.macromedia/Flash_Player"
                 "/home/$WHOAMI/.adobe/Flash_Player")

    for dir in "${DELETE_DIRS[@]}"; do
        if [ -d $dir ]; then
            if have shred; then
                echo "Securely removing $dir..."
                SHRED="shred -fuz -n 1"
                find "$dir" -type f -exec $SHRED "{}" \;
            else
                echo "Insecurely removing $dir..."
            fi
            rm -r "$dir"
        fi
    done

    cryptsetup luksClose $CONTAINER_FILE

    if [ $? -eq 0 ]; then
        zenity --info --text "Browser container locked!"
    else
        zenity --error --text="Could not lock profile!!!"
        return 1
    fi
}

function mountProfile() {
    # Create mount point if it doesn't exist
    if [ ! -d "$BROWSER_PROFILE/$CONTAINER_FILE" ]; then
        mkdir -p "$BROWSER_PROFILE/$CONTAINER_FILE"
        chown $WHOAMI "$BROWSER_PROFILE/$CONTAINER_FILE"
        chmod 700 "$BROWSER_PROFILE/$CONTAINER_FILE"
    fi

    mount -o noatime,nodev,nosuid /dev/mapper/$CONTAINER_FILE "$BROWSER_PROFILE/$CONTAINER_FILE" || {
        zenity --error --text="Could not mount profile!"
        return 1
    }
}

function startBrowser() {
    sudo -u $WHOAMI $BROWSER_EXE --no-remote --profile "$BROWSER_PROFILE/$CONTAINER_FILE"
    trap lockFirefox EXIT
}


if mount | grep "$BROWSER_PROFILE/$CONTAINER_FILE" > /dev/null; then
    zenity --error --text="Profile already mounted, starting $BROWSER_EXE..."
    startBrowser
elif [ ! -f "$CONTAINER_DIR/$CONTAINER_FILE" ]; then
    zenity --question --text "No encrypted profile found! Do you want to create it?"
    answer=$?

    if [ $answer = 0 ]; then
        while [ -z "$PROFILE" ]; do
            cd "$BROWSER_PROFILE"
            PROFILE=$(ls -d ./*/ | zenity --list --title "Select a Profile" --column "Profile" --separator=" " --multiple) || {
                zenity --error --text="No profile was selected!"
            }
        done

        while [ -z "$PASSWORD" ]; do
            PASSWORD1="$(zenity --entry --entry-hide-text --title 'Encrypt Password' --window-icon 'question' --text 'Password to use for encryption:')"
            PASSWORD2="$(zenity --entry --entry-hide-text --title='Confirm Password' --window-icon 'question' --text 'Confirm password:')"

            if [ "$PASSWORD1" = "$PASSWORD2" ]; then
                PASSWORD=$PASSWORD1
            else
                zenity --error --text="Passwords did not match!"
            fi
        done


        if [ ! -d "$CONTAINER_DIR" ]; then
            mkdir -p "$CONTAINER_DIR"
            chmod 700 "$CONTAINER_DIR"
            chown $WHOAMI "$CONTAINER_DIR"
        fi

        truncate -s "$CONTAINER_SIZE" "$CONTAINER_DIR/$CONTAINER_FILE"
        chown $WHOAMI "$CONTAINER_DIR/$CONTAINER_FILE"
        chmod 600 "$CONTAINER_DIR/$CONTAINER_FILE"

        # Encrypt and open container
        echo -n $PASSWORD | cryptsetup --key-file "-" luksFormat "$CONTAINER_DIR/$CONTAINER_FILE"
        echo -n $PASSWORD | cryptsetup --key-file "-" luksOpen "$CONTAINER_DIR/$CONTAINER_FILE" $CONTAINER_FILE

        # Make the filesystem
        mkfs.ext2 /dev/mapper/$CONTAINER_FILE
        tune2fs -m 0 /dev/mapper/$CONTAINER_FILE

        mountProfile || exit 1

        cp -R "$BROWSER_PROFILE/$PROFILE/"* "$BROWSER_PROFILE/$CONTAINER_FILE"
        chown $WHOAMI -R "$BROWSER_PROFILE/$CONTAINER_FILE"

        startBrowser
    else
        zenity --error --text="Encrypted profile doesn't exist!"
        exit 1
    fi
else
    PASSWORD=""$(zenity --entry --entry-hide-text --title 'Decrypt Password' --window-icon 'question' --text 'Password for decryption:')""

    echo -n $PASSWORD | cryptsetup --key-file "-" luksOpen "$CONTAINER_DIR/$CONTAINER_FILE" $CONTAINER_FILE || {
        zenity --error --text="Could not decrypt profile!"
        exit 1
    }

    mountProfile || exit 1
    startBrowser
fi
