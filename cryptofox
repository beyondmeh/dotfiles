#!/bin/bash

usage () {
cat <<HELP 
Create and launch an encrypted Firefox profile

Usage: $(basename "$0") [-s num] [-c DIR] [-p DIR]
   -s : Encrypted container size, in megabytes (Default: 100)
   -c : Container directory, without trailing slash 
        (Default: /home/[USER]/.private)
   -p : Firefox profile directory
        (Default: /home/[USER]/.mozilla/firefox)      

Note: 
   $(basename "$0") has built-in sane defaults, only
   advanced users should set the above flags


https://github.com/keithieopia/bin/
    
Copyright (c) 2016 Timothy Keith
Licensed under the BSD 2-clause license.
HELP
}

have() { type "$1" &> /dev/null; }
if ! have cryptsetup; then
    echo "$0 requires 'cryptsetup' to be installed!"
    exit 1
fi
if ! have zenity; then
    echo "$0 requires 'zenity' to be installed!"
    exit 1
fi
if ! have sudo; then
    echo "$0 requires 'sudo' to be installed!"
    exit 1
fi
if ! have firefox; then
    # queue the snark...
    echo "$0 is rather useless without Firefox. You may wish to install it..."
    exit 1
fi


WHOAMI=${SUDO_USER:-$(whoami)}
CONTAINER_DIR="/home/$WHOAMI/.private"
PROFILE_DIR="/home/$WHOAMI/.mozilla/firefox"
SIZE="100M"

while [ "$1" != "" ]; do
case $1 in
    -s )    shift
            SIZE="${1}M"
            ;;
    -p )    shift
            PROFILE_DIR="$1"
            ;;
    -c )    shift
            CONTAINER_DIR="$1"
            ;;
    -h )    usage
            exit
            ;;
    * )     usage
            exit 1
            ;;
    esac
    shift
done


if [ "$EUID" -ne 0 ]; then
    while [ -z "$SUDO" ]; do
        PASSWORD="$(zenity --entry --entry-hide-text --title 'sudo' --window-icon 'question' --text 'Enter sudo password:')"
        
        if [ ! $PASSWORD ]; then
            zenity --error --text="Canceling $(basename $0)"
            exit 1
        elif [ -z $PASSWORD ]; then
            zenity --error --text="No sudo password provided!"
        else
            SUDO=$PASSWORD
        fi
    done

    echo "$SUDO" | sudo -S $0
    exit
fi

function lockFirefox() {
    umount "$PROFILE_DIR/cryptofox"
    rmdir "$PROFILE_DIR/cryptofox"
    
    
    DELETE_DIRS=("/home/$WHOAMI/.cache/mozilla/firefox/cryptofox"
                 "/home/$WHOAMI/.macromedia/Flash_Player"
                 "/home/$WHOAMI/.adobe/Flash_Player")
    
    for dir in "${DELETE_DIRS[@]}"; do
        if [ -d $dir ]; then
            if have shred; then
                echo "Securely removing $dir..."
                SHRED="shred -fuz -n 1"
                find "$dir" -type f -exec $SHRED "{}" \;
            else
                echo "Insecurely removing $dir..."
            fi
            rm -r "$dir"
        fi
    done
    
    cryptsetup luksClose cryptofox

    if [ $? -eq 0 ]; then
        zenity --info --text "Firefox container locked!"
    else
        zenity --error --text="Could not lock profile!!!"
        return 1
    fi
}

function mountFirefox() {
    # Create mount point if it doesn't exist
    if [ ! -d "$PROFILE_DIR/cryptofox" ]; then
        mkdir -p "$PROFILE_DIR/cryptofox"
        chmod 700 "$PROFILE_DIR/cryptofox"
    fi

    mount -o noatime,nodev,nosuid /dev/mapper/cryptofox "$PROFILE_DIR/cryptofox" || {
        zenity --error --text="Could not mount profile!"
        return 1
    }
}

function startFirefox() {
    sudo -u timothy firefox --no-remote --profile "$PROFILE_DIR/cryptofox"
    trap lockFirefox EXIT
}


if mount | grep $PROFILE_D/cryptofox > /dev/null; then
    zenity --error --text="Profile already mounted, starting Firefox..."
    startFirefox
elif [ ! -f "$CONTAINER_DIR/cryptofox" ]; then
    zenity --question --text "No encrypted profile found! Do you want to create it?"
    answer=$?

    if [ $answer = 0 ]; then
        while [ -z "$PROFILE" ]; do
            cd "$PROFILE_DIR"
            PROFILE=$(ls -d ./*/ | zenity --list --title "Select a Profile" --column "Profile" --separator=" " --multiple) || {
                zenity --error --text="No profile was selected!"
            }
        done

        while [ -z "$PASSWORD" ]; do
            PASSWORD1="$(zenity --entry --entry-hide-text --title 'Encrypt Password' --window-icon 'question' --text 'Password to use for encryption:')"
            PASSWORD2="$(zenity --entry --entry-hide-text --title='Confirm Password' --window-icon 'question' --text 'Confirm password:')"

            if [ "$PASSWORD1" = "$PASSWORD2" ]; then
                PASSWORD=$PASSWORD1
            else
                zenity --error --text="Passwords did not match!"
            fi
        done


        if [ ! -d "$CONTAINER_DIR" ]; then
            mkdir -p "$CONTAINER_DIR"
            chmod 700 "$CONTAINER_DIR"
        fi

        truncate -s "$SIZE" "$CONTAINER_DIR/cryptofox"
        chmod 600 "$CONTAINER_DIR/cryptofox"

        # Encrypt and open container
        echo -n $PASSWORD | cryptsetup --key-file "-" luksFormat "$CONTAINER_DIR/cryptofox"
        echo -n $PASSWORD | cryptsetup --key-file "-" luksOpen "$CONTAINER_DIR/cryptofox" cryptofox

        # Make the filesystem
        mkfs.ext2 /dev/mapper/cryptofox
        tune2fs -m 0 /dev/mapper/cryptofox

        mountFirefox || exit 1
        chown $WHOAMI "$PROFILE_DIR/cryptofox"

        cp -R "$PROFILE_DIR/$PROFILE/"* "$PROFILE_DIR/cryptofox"

        startFirefox
    else
        zenity --error --text="Encrypted profile doesn't exist!"
        exit 1
    fi
else
    PASSWORD=""$(zenity --entry --entry-hide-text --title 'Decrypt Password' --window-icon 'question' --text 'Password for decryption:')""

    echo -n $PASSWORD | cryptsetup --key-file "-" luksOpen "$CONTAINER_DIR/cryptofox" cryptofox || {
        zenity --error --text="Could not decrypt profile!"
        exit 1
    }

    mountFirefox || exit 1
    startFirefox
fi
