#!/bin/bash

usage () {
cat <<HELP 
Changes the speaker volume and sends an OSD notification

usage: $(basename "$0") [OPTION]
   up     : Increase volume (will auto unmute if muted)
   down   : Decrease volume (will auto unmute if muted)  
   max    : ncrease volume to it's max level (will auto unmute if muted)
   mute   : Mute volume
   unmute : Unmute volume
   toggle : Toggles mute/unmute depending on the current setting
 

https://github.com/keithieopia/bin/
    
Copyright (c) 2016 Timothy Keith
Licensed under the BSD 2-clause license.
HELP
}

have() { type "$1" &> /dev/null; }
have amixer && AMIXER="amixer -D pulse" || {
    echo "$0 requires 'alsa-utils' to be installed!"
    exit 1
}
have notify-send && NOTIFY="notify-send -a volume" || {
    echo "$0 requires 'libnotify' to be installed!"
    exit 1
}


INTERVAL=5

if [ $1 == "-s" ]; then
    SILENT=1
    ACTION="$2"
else
    SILENT=0
    ACTION="$1"
fi

case $ACTION in
    "+"|"up")
        $AMIXER set Master ${INTERVAL}%+ unmute > /dev/null
        action=increased
        ;;
    "-"|"down")
        $AMIXER set Master ${INTERVAL}%- unmute > /dev/null
        action=lowered
        ;;
    "max")
        $AMIXER set Master 100%+ unmute > /dev/null
        action=maxed
        ;;
    "mute")
        $AMIXER set Master mute > /dev/null
        action=muted
        ;;
    "half")
        $AMIXER set Master 50% unmute > /dev/null
        action=increased
        ;;
    "unmute")
        $AMIXER set Master unmute > /dev/null
        action=unmuted
        ;;
    "toggle")
        $AMIXER set Master toggle > /dev/null
        if `$AMIXER get Master | tail -1 | grep off > /dev/null`; then
            action=muted
        else
            action=unmuted
        fi
        ;;
    "-h")
        usage
        exit
        ;;
    *)
        usage
        exit 1
        ;;
esac

if [ $SILENT -ne 1 ]; then
    vol=$(awk '/%/ {gsub(/[\[\]]/,""); print $5}' <($AMIXER sget Master) | head -1)
    $NOTIFY -u low "Volume ${action}!" "Volume is now set to ${vol}"
fi
